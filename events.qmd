---
title: "Events"
---

::::{.columns}
:::{.column width=60%}

There is so much to see and do in this corner of Manitoba!

Events range from casual walks through city parks, to bird watching along rivers and wetlands, to public talks by local experts.

Enjoy!

### Upcoming Events

Everyone is welcome to join in on any and every event!

Please remember to dress for the weather, bring water and bug spray, and food for outings.

:::

:::{.column width=40%}
![](images/DSC_5760 (2).JPG){fig-alt="Pink cactus blooming"}
:::
::::


::: {.column-margin}
<div style="float: center; clear: right">
<iframe src="https://calendar.google.com/calendar/embed?height=600&wkst=1&ctz=America%2FWinnipeg&bgcolor=%23ffffff&showTitle=0&showDate=0&showPrint=0&showTabs=0&showCalendars=0&src=d2VzdG1hbi5uYXR1cmFsaXN0c0BnbWFpbC5jb20&color=%230B8043" style="border:solid 1px #777" width="250" height="250" frameborder="0" scrolling="no"></iframe></div>
:::


```{r}
#| echo = FALSE,
#| results = "asis"

library(dplyr)
library(tidyr)
library(glue)
library(lubridate)

events <- readRDS("events.rds")

upcoming <- filter(events, !.data$past) |>
  arrange(.data$date) |>
  nest(data = c(-"month"))

if (nrow(upcoming) == 0) {
  cat("> **Nothing planned at the moment, but check back!**")
} else {
  for (m in upcoming$month) {
    print(glue(
      "\n\n## ",
      as.character(month(m, label = TRUE, abbr = FALSE)),
      "\n\n"
    ))

    filter(upcoming, .data$month == .env$m) |>
      unnest(cols = "data") |>
      mutate(event = glue("{.data$event}\n\n{.data$post_link}")) |>
      pull(.data$event) |>
      glue_collapse(sep = "\n\n-----\n\n") |>
      print()
  }
}
```


--------

### Previous Events
```{r}
#| echo = FALSE,
#| results = "asis"
past <- filter(events, .data$past) |>
  arrange(desc(.data$date)) |>
  nest(data = c(-"year", -"month"))

cat(":::{.panel-tabset}\n\n")

for (y in unique(past$year)) {
  cat(glue("\n\n#### {y}\n\n"))

  p <- filter(past, year == y)
  if (nrow(p) > 0) {
    for (i in seq_len(nrow(p))) {
      m <- p$month[i]

      print(glue(
        "\n\n## {as.character(month(m, label = TRUE, abbr = FALSE))} {y}\n\n"
      ))

      p[i, ] |>
        unnest(cols = "data") |>
        mutate(event = glue("{.data$event}\n\n{.data$post_link}")) |>
        pull(.data$event) |>
        glue_collapse(sep = "\n\n-----\n\n") |>
        print()
    }
  }
}
cat("\n\n:::\n\n")
```

